{"ast":null,"code":"import axios from 'axios';\n\n// const API_URL = 'http://localhost:8000/api/v1/rules';  // Base API URL\n// http://localhost:5001/api/rules/create\n\n// Create a new rule\nexport const createRule = ruleString => {\n  return axios.post(`http://localhost:5001/api/rules/create`, {\n    rule_string: ruleString\n  });\n};\n\n// Combine multiple rules\nexport const combineRules = rules => {\n  return axios.post(`http://localhost:5001/api/rules/combine`, {\n    rules\n  });\n};\n\n// Evaluate the combined rule\nexport const evaluateRule = data => {\n  return axios.post(`http://localhost:5001/api/rules/evaluate`, data); // Pass data and combined rule for evaluation\n};","map":{"version":3,"names":["axios","createRule","ruleString","post","rule_string","combineRules","rules","evaluateRule","data"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/services/RuleServices.js"],"sourcesContent":["import axios from 'axios';\n\n// const API_URL = 'http://localhost:8000/api/v1/rules';  // Base API URL\n// http://localhost:5001/api/rules/create\n\n// Create a new rule\nexport const createRule = (ruleString) => {\n    return axios.post(`http://localhost:5001/api/rules/create`, { rule_string: ruleString });\n};\n\n// Combine multiple rules\nexport const combineRules = (rules) => {\n    return axios.post(`http://localhost:5001/api/rules/combine`, { rules });\n};\n\n// Evaluate the combined rule\nexport const evaluateRule = (data) => {\n    return axios.post(`http://localhost:5001/api/rules/evaluate`, data);  // Pass data and combined rule for evaluation\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA,OAAO,MAAMC,UAAU,GAAIC,UAAU,IAAK;EACtC,OAAOF,KAAK,CAACG,IAAI,CAAC,wCAAwC,EAAE;IAAEC,WAAW,EAAEF;EAAW,CAAC,CAAC;AAC5F,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAIC,KAAK,IAAK;EACnC,OAAON,KAAK,CAACG,IAAI,CAAC,yCAAyC,EAAE;IAAEG;EAAM,CAAC,CAAC;AAC3E,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAClC,OAAOR,KAAK,CAACG,IAAI,CAAC,0CAA0C,EAAEK,IAAI,CAAC,CAAC,CAAE;AAC1E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}