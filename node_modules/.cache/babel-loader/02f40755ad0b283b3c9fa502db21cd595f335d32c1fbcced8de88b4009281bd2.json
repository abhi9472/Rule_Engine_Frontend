{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/Pages/Combine.js\",\n  _s = $RefreshSig$();\n// src/pages/Combine.js\nimport React, { useState, useEffect } from 'react';\nimport CombineForm from '../components/CombineForm.js';\nimport { fetchRules } from '../services/RuleServices.js'; // Assuming a service that fetches rules\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Combine = () => {\n  _s();\n  const [rules, setRules] = useState([]);\n  const [combinedAST, setCombinedAST] = useState(null);\n  useEffect(() => {\n    // Fetch rules when the component mounts\n    const getRules = async () => {\n      try {\n        const fetchedRules = await fetchRules(); // Assuming this gets rules from the backend\n        setRules(fetchedRules);\n      } catch (error) {\n        console.error('Error fetching rules:', error);\n      }\n    };\n    getRules();\n  }, []);\n  const handleCombinedAST = ast => {\n    setCombinedAST(ast);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), rules.length > 0 ? /*#__PURE__*/_jsxDEV(CombineForm, {\n      rules: rules,\n      onCombined: handleCombinedAST\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading rules...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), combinedAST && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Combined AST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(combinedAST, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Combine, \"mpc2l9n+8+VqlrqDxUdBwK1u3BQ=\");\n_c = Combine;\nexport default Combine;\nvar _c;\n$RefreshReg$(_c, \"Combine\");","map":{"version":3,"names":["React","useState","useEffect","CombineForm","fetchRules","jsxDEV","_jsxDEV","Combine","_s","rules","setRules","combinedAST","setCombinedAST","getRules","fetchedRules","error","console","handleCombinedAST","ast","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onCombined","JSON","stringify","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/Pages/Combine.js"],"sourcesContent":["// src/pages/Combine.js\nimport React, { useState, useEffect } from 'react';\nimport CombineForm from '../components/CombineForm.js';\nimport { fetchRules } from '../services/RuleServices.js'; // Assuming a service that fetches rules\n\nconst Combine = () => {\n    const [rules, setRules] = useState([]);\n    const [combinedAST, setCombinedAST] = useState(null);\n\n    useEffect(() => {\n        // Fetch rules when the component mounts\n        const getRules = async () => {\n            try {\n                const fetchedRules = await fetchRules(); // Assuming this gets rules from the backend\n                setRules(fetchedRules);\n            } catch (error) {\n                console.error('Error fetching rules:', error);\n            }\n        };\n\n        getRules();\n    }, []);\n\n    const handleCombinedAST = (ast) => {\n        setCombinedAST(ast);\n    };\n\n    return (\n        <div>\n            <h1>Combine Rules</h1>\n            {rules.length > 0 ? (\n                <CombineForm rules={rules} onCombined={handleCombinedAST} />\n            ) : (\n                <p>Loading rules...</p>\n            )}\n            {combinedAST && (\n                <div>\n                    <h2>Combined AST</h2>\n                    <pre>{JSON.stringify(combinedAST, null, 2)}</pre>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Combine;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,SAASC,UAAU,QAAQ,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,IAAI;QACA,MAAMC,YAAY,GAAG,MAAMV,UAAU,CAAC,CAAC,CAAC,CAAC;QACzCM,QAAQ,CAACI,YAAY,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDF,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,iBAAiB,GAAIC,GAAG,IAAK;IAC/BN,cAAc,CAACM,GAAG,CAAC;EACvB,CAAC;EAED,oBACIZ,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBd,KAAK,CAACe,MAAM,GAAG,CAAC,gBACblB,OAAA,CAACH,WAAW;MAACM,KAAK,EAAEA,KAAM;MAACgB,UAAU,EAAER;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE5DjB,OAAA;MAAAa,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzB,EACAZ,WAAW,iBACRL,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EAAMO,IAAI,CAACC,SAAS,CAAChB,WAAW,EAAE,IAAI,EAAE,CAAC;MAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CAtCID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAwCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}