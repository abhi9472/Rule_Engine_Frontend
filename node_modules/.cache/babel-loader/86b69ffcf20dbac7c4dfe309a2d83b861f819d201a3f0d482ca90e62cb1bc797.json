{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombineForm = ({\n  onCombined\n}) => {\n  _s();\n  const [rules, setRules] = useState(['']); // Initialize with one empty rule\n  const [error, setError] = useState(null); // For error handling\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Filter out empty rules to avoid sending invalid data\n    const filteredRules = rules.filter(rule => rule.trim() !== '');\n\n    // Check if there are valid rules to send\n    if (filteredRules.length === 0) {\n      setError('Please enter at least one valid rule.');\n      return;\n    }\n    setError(null); // Reset error if validation passes\n\n    try {\n      // Send the filtered rules to the backend\n      const response = await combineRules({\n        rules: filteredRules\n      }); // Wrap in an object with a \"rules\" property\n      if (response.data && response.data.combinedAST) {\n        onCombined(response.data.combinedAST); // Pass the combined AST to parent component\n      } else {\n        setError('Unexpected response format.');\n      }\n    } catch (error) {\n      console.error('Error combining rules:', error);\n      setError('Failed to combine rules. Please try again.');\n    }\n  };\n  const handleChange = (index, value) => {\n    const newRules = [...rules];\n    newRules[index] = value;\n    setRules(newRules);\n  };\n  const addRule = () => {\n    setRules([...rules, '']); // Add a new empty rule input field\n  };\n  const removeRule = index => {\n    const newRules = [...rules];\n    newRules.splice(index, 1); // Remove the rule input at the given index\n    setRules(newRules);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Rule ${index + 1}`,\n        value: rule,\n        onChange: e => handleChange(index, e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeRule(index),\n        children: \"Remove Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addRule,\n      children: \"Add Another Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(CombineForm, \"XH/fg+IOSBuPYcWl5BmJRMtUMRM=\");\n_c = CombineForm;\nexport default CombineForm;\nvar _c;\n$RefreshReg$(_c, \"CombineForm\");","map":{"version":3,"names":["React","useState","combineRules","jsxDEV","_jsxDEV","CombineForm","onCombined","_s","rules","setRules","error","setError","handleSubmit","e","preventDefault","filteredRules","filter","rule","trim","length","response","data","combinedAST","console","handleChange","index","value","newRules","addRule","removeRule","splice","onSubmit","children","map","style","marginBottom","type","placeholder","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","color","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\n\nconst CombineForm = ({ onCombined }) => {\n    const [rules, setRules] = useState(['']);  // Initialize with one empty rule\n    const [error, setError] = useState(null); // For error handling\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Filter out empty rules to avoid sending invalid data\n        const filteredRules = rules.filter(rule => rule.trim() !== '');\n\n        // Check if there are valid rules to send\n        if (filteredRules.length === 0) {\n            setError('Please enter at least one valid rule.');\n            return;\n        }\n        setError(null); // Reset error if validation passes\n\n        try {\n            // Send the filtered rules to the backend\n            const response = await combineRules({ rules: filteredRules }); // Wrap in an object with a \"rules\" property\n            if (response.data && response.data.combinedAST) {\n                onCombined(response.data.combinedAST); // Pass the combined AST to parent component\n            } else {\n                setError('Unexpected response format.');\n            }\n        } catch (error) {\n            console.error('Error combining rules:', error);\n            setError('Failed to combine rules. Please try again.');\n        }\n    };\n\n    const handleChange = (index, value) => {\n        const newRules = [...rules];\n        newRules[index] = value;\n        setRules(newRules);\n    };\n\n    const addRule = () => {\n        setRules([...rules, '']); // Add a new empty rule input field\n    };\n\n    const removeRule = (index) => {\n        const newRules = [...rules];\n        newRules.splice(index, 1); // Remove the rule input at the given index\n        setRules(newRules);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {rules.map((rule, index) => (\n                <div key={index} style={{ marginBottom: '10px' }}>\n                    <input\n                        type=\"text\"\n                        placeholder={`Rule ${index + 1}`}\n                        value={rule}\n                        onChange={(e) => handleChange(index, e.target.value)}\n                        required\n                    />\n                    <button type=\"button\" onClick={() => removeRule(index)}>\n                        Remove Rule\n                    </button>\n                </div>\n            ))}\n            <button type=\"button\" onClick={addRule}>\n                Add Another Rule\n            </button>\n            <br />\n            {error && <div style={{ color: 'red' }}>{error}</div>}\n            <button type=\"submit\">Combine Rules</button>\n        </form>\n    );\n};\n\nexport default CombineForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}