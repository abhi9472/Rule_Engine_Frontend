{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\nimport '../index.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombineForm = ({\n  onCombined\n}) => {\n  _s();\n  const [rules, setRules] = useState(['']); // Initialize with one empty rule\n  const [response, setResponse] = useState(null); // State to hold server response\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Create the request body in the expected format\n    const requestBody = {\n      rules: rules.filter(rule => rule.trim() !== '') // Filter out any empty rules\n    };\n    try {\n      const res = await combineRules(requestBody); // Pass the request body\n      setResponse(res.data); // Save the response\n      onCombined(res.data.combinedAST); // Pass the combined AST to parent component\n    } catch (error) {\n      console.error('Error combining rules:', error);\n      setResponse({\n        error: 'Failed to combine rules. Please try again.'\n      });\n    }\n  };\n  const handleChange = (index, value) => {\n    const newRules = [...rules];\n    newRules[index] = value;\n    setRules(newRules);\n  };\n  const addRule = () => {\n    setRules([...rules, '']); // Add a new empty rule input field\n  };\n  const removeRule = index => {\n    const newRules = [...rules];\n    newRules.splice(index, 1); // Remove the rule input at the given index\n    setRules(newRules);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto p-4 bg-white rounded-lg shadow-md\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-grow p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:ring-blue-500\",\n          placeholder: `Rule ${index + 1}`,\n          value: rule,\n          onChange: e => handleChange(index, e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => removeRule(index),\n          className: \"ml-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600\",\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addRule,\n        className: \"mb-4 p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\",\n        children: \"Add Another Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full p-2 bg-green-500 text-white rounded-lg hover:bg-green-600\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), response && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-gray-100 border border-gray-300 rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold\",\n        children: \"Response from Server:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(CombineForm, \"IDc5fIaMj7J4WKiaYjcx++QwRZ8=\");\n_c = CombineForm;\nexport default CombineForm;\nvar _c;\n$RefreshReg$(_c, \"CombineForm\");","map":{"version":3,"names":["React","useState","combineRules","jsxDEV","_jsxDEV","CombineForm","onCombined","_s","rules","setRules","response","setResponse","handleSubmit","e","preventDefault","requestBody","filter","rule","trim","res","data","combinedAST","error","console","handleChange","index","value","newRules","addRule","removeRule","splice","className","children","onSubmit","map","type","placeholder","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\nimport '../index.js'\n\nconst CombineForm = ({ onCombined }) => {\n    const [rules, setRules] = useState(['']);  // Initialize with one empty rule\n    const [response, setResponse] = useState(null); // State to hold server response\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        // Create the request body in the expected format\n        const requestBody = {\n            rules: rules.filter(rule => rule.trim() !== '') // Filter out any empty rules\n        };\n\n        try {\n\n            const res = await combineRules(requestBody); // Pass the request body\n            setResponse(res.data); // Save the response\n            onCombined(res.data.combinedAST); // Pass the combined AST to parent component\n        } catch (error) {\n            console.error('Error combining rules:', error);\n            setResponse({ error: 'Failed to combine rules. Please try again.' });\n        }\n    };\n\n    const handleChange = (index, value) => {\n        const newRules = [...rules];\n        newRules[index] = value;\n        setRules(newRules);\n    };\n\n    const addRule = () => {\n        setRules([...rules, '']); // Add a new empty rule input field\n    };\n\n    const removeRule = (index) => {\n        const newRules = [...rules];\n        newRules.splice(index, 1); // Remove the rule input at the given index\n        setRules(newRules);\n    };\n\n    return (\n        <div className=\"max-w-md mx-auto p-4 bg-white rounded-lg shadow-md\">\n            {/* <h2 className=\"text-lg font-semibold mb-4\">Combine Rules</h2> */}\n            <form onSubmit={handleSubmit}>\n                {rules.map((rule, index) => (\n                    <div key={index} className=\"flex items-center mb-3\">\n                        <input\n                            type=\"text\"\n                            className=\"flex-grow p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:ring-blue-500\"\n                            placeholder={`Rule ${index + 1}`}\n                            value={rule}\n                            onChange={(e) => handleChange(index, e.target.value)}\n                            required\n                        />\n                        <button \n                            type=\"button\" \n                            onClick={() => removeRule(index)} \n                            className=\"ml-2 p-2 bg-red-500 text-white rounded-lg hover:bg-red-600\"\n                        >\n                            Remove\n                        </button>\n                    </div>\n                ))}\n                <button \n                    type=\"button\" \n                    onClick={addRule} \n                    className=\"mb-4 p-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\n                >\n                    Add Another Rule\n                </button>\n                <br />\n                <button \n                    type=\"submit\" \n                    className=\"w-full p-2 bg-green-500 text-white rounded-lg hover:bg-green-600\"\n                >\n                    Combine Rules\n                </button>\n            </form>\n\n            {response && (\n                <div className=\"mt-4 p-4 bg-gray-100 border border-gray-300 rounded-lg\">\n                    <h3 className=\"font-semibold\">Response from Server:</h3>\n                    {/* <pre className=\"whitespace-pre-wrap\">{JSON.stringify(response, null, 2)}</pre> */}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default CombineForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}