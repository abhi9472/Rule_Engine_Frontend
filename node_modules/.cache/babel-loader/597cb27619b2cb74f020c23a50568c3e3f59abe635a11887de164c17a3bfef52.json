{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/Pages/Home.js\",\n  _s = $RefreshSig$();\n// src/Pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport RuleForm from '../components/RuleForm.js';\nimport RuleList from '../components/RuleList.js';\nimport CombineForm from '../components/CombineForm.js';\nimport RuleEvaluator from '../components/RuleEvaluator.js';\nimport { getAllRules } from '../services/RuleServices.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [rules, setRules] = useState([]);\n  useEffect(() => {\n    fetchRules();\n  }, []);\n  const fetchRules = async () => {\n    try {\n      const response = await getAllRules();\n      setRules(response.data.rules); // Adjust based on your API response structure\n    } catch (error) {\n      console.error('Error fetching rules:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rule Engine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RuleForm, {\n      onRuleCreated: fetchRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CombineForm, {\n      rules: rules,\n      onCombined: fetchRules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RuleEvaluator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RuleList, {\n      rules: rules\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"sTtk373PZ75lT1TKxmJpkKbdr00=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","RuleForm","RuleList","CombineForm","RuleEvaluator","getAllRules","jsxDEV","_jsxDEV","Home","_s","rules","setRules","fetchRules","response","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onRuleCreated","onCombined","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/Pages/Home.js"],"sourcesContent":["// src/Pages/Home.js\nimport React, { useState, useEffect } from 'react';\nimport RuleForm from '../components/RuleForm.js';\nimport RuleList from '../components/RuleList.js';\nimport CombineForm from '../components/CombineForm.js';\nimport RuleEvaluator from '../components/RuleEvaluator.js';\nimport { getAllRules } from '../services/RuleServices.js';\n\nconst Home = () => {\n    const [rules, setRules] = useState([]);\n\n    useEffect(() => {\n        fetchRules();\n    }, []);\n\n    const fetchRules = async () => {\n        try {\n            const response = await getAllRules();\n            setRules(response.data.rules); // Adjust based on your API response structure\n        } catch (error) {\n            console.error('Error fetching rules:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Rule Engine</h1>\n            <RuleForm onRuleCreated={fetchRules} />\n            <CombineForm rules={rules} onCombined={fetchRules} />\n            <RuleEvaluator />\n            <RuleList rules={rules} />\n        </div>\n    );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,gCAAgC;AAC1D,SAASC,WAAW,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZY,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMR,WAAW,CAAC,CAAC;MACpCM,QAAQ,CAACE,QAAQ,CAACC,IAAI,CAACJ,KAAK,CAAC,CAAC,CAAC;IACnC,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIR,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBd,OAAA,CAACN,QAAQ;MAACqB,aAAa,EAAEV;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCd,OAAA,CAACJ,WAAW;MAACO,KAAK,EAAEA,KAAM;MAACa,UAAU,EAAEX;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrDd,OAAA,CAACH,aAAa;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjBd,OAAA,CAACL,QAAQ;MAACQ,KAAK,EAAEA;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEd,CAAC;AAACZ,EAAA,CAzBID,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AA2BV,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}