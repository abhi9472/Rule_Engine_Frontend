{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombineForm = ({\n  onCombined\n}) => {\n  _s();\n  const [rules, setRules] = useState(['']); // Initialize with one empty rule\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      console.log(first);\n      const response = await combineRules({\n        rules\n      }); // Send rules wrapped in an object\n      onCombined(response.data.combinedAST); // Pass the combined AST to parent component\n    } catch (error) {\n      console.error('Error combining rules:', error);\n    }\n  };\n  const handleChange = (index, value) => {\n    const newRules = [...rules];\n    newRules[index] = value;\n    setRules(newRules);\n  };\n  const addRule = () => {\n    setRules([...rules, '']); // Add a new empty rule input field\n  };\n  const removeRule = index => {\n    const newRules = [...rules];\n    newRules.splice(index, 1); // Remove the rule input at the given index\n    setRules(newRules);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Rule ${index + 1}`,\n        value: rule,\n        onChange: e => handleChange(index, e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => removeRule(index),\n        children: \"Remove Rule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: addRule,\n      children: \"Add Another Rule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(CombineForm, \"8rayuUBU9B0f25wSJ9/f/DzTLpU=\");\n_c = CombineForm;\nexport default CombineForm;\nvar _c;\n$RefreshReg$(_c, \"CombineForm\");","map":{"version":3,"names":["React","useState","combineRules","jsxDEV","_jsxDEV","CombineForm","onCombined","_s","rules","setRules","handleSubmit","e","preventDefault","console","log","first","response","data","combinedAST","error","handleChange","index","value","newRules","addRule","removeRule","splice","onSubmit","children","map","rule","style","marginBottom","type","placeholder","onChange","target","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { combineRules } from '../services/RuleServices.js';\n\nconst CombineForm = ({ onCombined }) => {\n    const [rules, setRules] = useState(['']);  // Initialize with one empty rule\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            console.log(first)\n            const response = await combineRules({ rules }); // Send rules wrapped in an object\n            onCombined(response.data.combinedAST); // Pass the combined AST to parent component\n        } catch (error) {\n            console.error('Error combining rules:', error);\n        }\n    };\n\n    const handleChange = (index, value) => {\n        const newRules = [...rules];\n        newRules[index] = value;\n        setRules(newRules);\n    };\n\n    const addRule = () => {\n        setRules([...rules, '']); // Add a new empty rule input field\n    };\n\n    const removeRule = (index) => {\n        const newRules = [...rules];\n        newRules.splice(index, 1); // Remove the rule input at the given index\n        setRules(newRules);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {rules.map((rule, index) => (\n                <div key={index} style={{ marginBottom: '10px' }}>\n                    <input\n                        type=\"text\"\n                        placeholder={`Rule ${index + 1}`}\n                        value={rule}\n                        onChange={(e) => handleChange(index, e.target.value)}\n                        required\n                    />\n                    <button type=\"button\" onClick={() => removeRule(index)}>\n                        Remove Rule\n                    </button>\n                </div>\n            ))}\n            <button type=\"button\" onClick={addRule}>\n                Add Another Rule\n            </button>\n            <br />\n            <button type=\"submit\">Combine Rules</button>\n        </form>\n    );\n};\n\nexport default CombineForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}