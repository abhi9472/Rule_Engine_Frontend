{"ast":null,"code":"var _jsxFileName = \"/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CombineForm = ({\n  rules,\n  onCombined\n}) => {\n  _s();\n  const [selectedRules, setSelectedRules] = useState([]);\n  const handleRuleChange = event => {\n    const {\n      value,\n      checked\n    } = event.target;\n    if (checked) {\n      // Add selected rule to the array\n      setSelectedRules([...selectedRules, value]);\n    } else {\n      // Remove the rule if unchecked\n      setSelectedRules(selectedRules.filter(rule => rule !== value));\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedRules.length === 0) {\n      alert('Please select at least one rule to combine.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/api/rules/combine', {\n        rules: selectedRules\n      });\n      onCombined(); // Fetch updated rules if needed\n      console.log('Combined AST:', response.data.combinedAST);\n    } catch (error) {\n      console.error('Error combining rules:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Combine Rules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [rules.map((rule, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: rule.ruleString,\n            onChange: handleRuleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), rule.ruleString]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Combine Rules\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(CombineForm, \"Y6ARJ88E31SBvS6nFDiYWxrwaY0=\");\n_c = CombineForm;\nexport default CombineForm;\nvar _c;\n$RefreshReg$(_c, \"CombineForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CombineForm","rules","onCombined","_s","selectedRules","setSelectedRules","handleRuleChange","event","value","checked","target","filter","rule","handleSubmit","preventDefault","length","alert","response","post","console","log","data","combinedAST","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","index","type","ruleString","onChange","_c","$RefreshReg$"],"sources":["/Users/abhishekkumar/Desktop/rule-engine/frontend/src/components/CombineForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst CombineForm = ({ rules, onCombined }) => {\n    const [selectedRules, setSelectedRules] = useState([]);\n\n    const handleRuleChange = (event) => {\n        const { value, checked } = event.target;\n\n        if (checked) {\n            // Add selected rule to the array\n            setSelectedRules([...selectedRules, value]);\n        } else {\n            // Remove the rule if unchecked\n            setSelectedRules(selectedRules.filter((rule) => rule !== value));\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        \n        if (selectedRules.length === 0) {\n            alert('Please select at least one rule to combine.');\n            return;\n        }\n\n        try {\n            const response = await axios.post('http://localhost:5001/api/rules/combine', { rules: selectedRules });\n            onCombined(); // Fetch updated rules if needed\n            console.log('Combined AST:', response.data.combinedAST);\n        } catch (error) {\n            console.error('Error combining rules:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Combine Rules</h2>\n            <form onSubmit={handleSubmit}>\n                {rules.map((rule, index) => (\n                    <div key={index}>\n                        <label>\n                            <input \n                                type=\"checkbox\" \n                                value={rule.ruleString} \n                                onChange={handleRuleChange}\n                            />\n                            {rule.ruleString}\n                        </label>\n                    </div>\n                ))}\n                <button type=\"submit\">Combine Rules</button>\n            </form>\n        </div>\n    );\n};\n\nexport default CombineForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAM;MAAEC,KAAK;MAAEC;IAAQ,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEvC,IAAID,OAAO,EAAE;MACT;MACAJ,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAEI,KAAK,CAAC,CAAC;IAC/C,CAAC,MAAM;MACH;MACAH,gBAAgB,CAACD,aAAa,CAACO,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,KAAK,CAAC,CAAC;IACpE;EACJ,CAAC;EAED,MAAMK,YAAY,GAAG,MAAON,KAAK,IAAK;IAClCA,KAAK,CAACO,cAAc,CAAC,CAAC;IAEtB,IAAIV,aAAa,CAACW,MAAM,KAAK,CAAC,EAAE;MAC5BC,KAAK,CAAC,6CAA6C,CAAC;MACpD;IACJ;IAEA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,yCAAyC,EAAE;QAAEjB,KAAK,EAAEG;MAAc,CAAC,CAAC;MACtGF,UAAU,CAAC,CAAC,CAAC,CAAC;MACdiB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAAC;IAC3D,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZJ,OAAO,CAACI,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,oBACIxB,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB7B,OAAA;MAAM8B,QAAQ,EAAEhB,YAAa;MAAAW,QAAA,GACxBvB,KAAK,CAAC6B,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACnBhC,OAAA;QAAAyB,QAAA,eACIzB,OAAA;UAAAyB,QAAA,gBACIzB,OAAA;YACIiC,IAAI,EAAC,UAAU;YACfxB,KAAK,EAAEI,IAAI,CAACqB,UAAW;YACvBC,QAAQ,EAAE5B;UAAiB;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC,EACDhB,IAAI,CAACqB,UAAU;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC,GARFG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACR,CAAC,eACF7B,OAAA;QAAQiC,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACzB,EAAA,CApDIH,WAAW;AAAAmC,EAAA,GAAXnC,WAAW;AAsDjB,eAAeA,WAAW;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}